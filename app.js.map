{"mappings":"ACAA,MAAM,kCAAY,KAAK,KAAK,CAAC,SAAS,cAAc,CAAC,OAAO,OAAO,CAAC,SAAS;AAE7E,QAAQ,GAAG,CAAC;AAEZ,MAAM,4BAAM,EAAE,GAAG,CAAC,OAAO;IACvB,iBAAiB;AACnB;AAEA,EAAE,SAAS,CAAC,kEAAkE;IAC5E,SAAS;AACX,GAAG,KAAK,CAAC;AACT,iFAAiF;AACjF,iBAAiB;AACjB,iBAAiB;AAEjB,MAAM,+BAAS,EAAE,YAAY;AAE7B,gCAAU,OAAO,CAAC,CAAC;IACjB,MAAM,2BAA2B;QAAC,IAAI,WAAW,CAAC,EAAE;QAAE,IAAI,WAAW,CAAC,EAAE;KAAC,EAAE,kDAAkD;IAC7H,qBAAqB;IACrB,MAAM,SAAS,EAAE,IAAI,CAAC;QACpB,SAAS,CAAC,EAAE,OAAO,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC;QAChD,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAI;SAAG;IACtB;IACA,EAAE,MAAM,CAAC,0BAA0B;QAAE,MAAM;IAAO,GAAG,KAAK,CAAC;IAC3D,EAAE,KAAK,CAAC,0BAA0B;QAChC,SAAS,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC;QACpD,QAAQ,EAAE,KAAK,CAAC,IAAI;IACtB,GAAG,KAAK,CAAC;IAET,6BAAO,MAAM,CAAC;AAChB;AAEA,0BAAI,SAAS,CAAC,8BAAQ;IACpB,gBAAgB;QAAC;QAAK;KAAI;IAC1B,oBAAoB;QAAC;QAAK;KAAG;AAC/B;;;ACrCA,MAAM,8BAAQ,OAAO,OAAO;IAC1B,IAAI;QACF,MAAM,MAAM,MAAM,MAAM;YACtB,QAAQ;YACR,KAAK,CAAC,EAAE,OAAO,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC;YACnD,MAAM;uBACJ;0BACA;YACF;QACF;QACA,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW;YACjC,MAAM;YACN,OAAO,UAAU,CAAC;gBAChB,SAAS,MAAM,CAAC;YAClB,GAAG;QACL;IACF,EAAE,OAAO,KAAK;QACZ,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO;IACjC;AACF;AAEA,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,UAAU,CAAC;IAC1D,EAAE,cAAc;IAChB,MAAM,QAAQ,SAAS,cAAc,CAAC,SAAS,KAAK;IACpD,MAAM,WAAW,SAAS,cAAc,CAAC,YAAY,KAAK;IAC1D,4BAAM,OAAO;AACf;;;AFvBA,MAAM,mCAAa,CAAC;IAClB,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,OAAO,GAAG,GAAG;IACb,OAAO,KAAK,GAAG;IACf,SAAS,IAAI,CAAC,WAAW,CAAC;AAC5B;AAEA,iCAAW","sources":["public/js/index.js","public/js/leaflet.js","public/js/login.js"],"sourcesContent":["import './leaflet.js';\r\nimport './login.js';\r\n\r\nconst loadScript = (src) => {\r\n  const script = document.createElement('script');\r\n  script.src = src;\r\n  script.async = true;\r\n  document.body.appendChild(script);\r\n};\r\n\r\nloadScript('https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.5/axios.min.js');\r\n","const locations = JSON.parse(document.getElementById('map').dataset.locations);\r\n\r\nconsole.log(locations);\r\n\r\nconst map = L.map('map', {\r\n  scrollWheelZoom: false,\r\n});\r\n\r\nL.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n  maxZoom: 19,\r\n}).addTo(map);\r\n// L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\r\n//   maxZoom: 19,\r\n// }).addTo(map);\r\n\r\nconst bounds = L.latLngBounds();\r\n\r\nlocations.forEach((loc) => {\r\n  const swappedLatLngCoordinates = [loc.coordinates[1], loc.coordinates[0]]; // because it has to be lat and lng not in reverse\r\n  // Create marker icon\r\n  const myIcon = L.icon({\r\n    iconUrl: `${window.location.origin}/img/pin.png`,\r\n    iconSize: [32, 40],\r\n    iconAnchor: [22, 94],\r\n  });\r\n  L.marker(swappedLatLngCoordinates, { icon: myIcon }).addTo(map);\r\n  L.popup(swappedLatLngCoordinates, {\r\n    content: `<p>Day ${loc.day}: ${loc.description}</p>`,\r\n    offset: L.point(-5, -70),\r\n  }).addTo(map);\r\n\r\n  bounds.extend(swappedLatLngCoordinates);\r\n});\r\n\r\nmap.fitBounds(bounds, {\r\n  paddingTopLeft: [100, 200],\r\n  paddingBottomRight: [100, 50],\r\n});\r\n","const login = async (email, password) => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${window.location.origin}/api/v1/users/login`,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n    if (res.data.status === 'success') {\r\n      alert('Logged in successfully');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    }\r\n  } catch (err) {\r\n    alert(err.response.data.message);\r\n  }\r\n};\r\n\r\ndocument.querySelector('.form').addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  const email = document.getElementById('email').value;\r\n  const password = document.getElementById('password').value;\r\n  login(email, password);\r\n});\r\n"],"names":[],"version":3,"file":"app.js.map"}